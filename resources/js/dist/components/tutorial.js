// resources/js/components/tutorial.js
function tutorialComponent({
  index
}) {
  return {
    index,
    scrollTimeout: null,
    documentHeight: 0,
    initialize: function() {
      window.addEventListener("tutorial::render", () => {
        this.documentHeight = document.documentElement.getBoundingClientRect().height;
        this.$root.style.height = this.documentHeight + "px";
      });
      this.tutorial = this;
      console.log("Init tutorial");
      this.documentHeight = Math.max(
        document.body.scrollHeight,
        document.body.offsetHeight,
        document.documentElement.clientHeight,
        document.documentElement.scrollHeight,
        document.documentElement.offsetHeight
      );
      this.$nextTick(() => {
        this.$dispatch("tutorial::render");
      });
      console.log("height", this.documentHeight);
    },
    scrollStart: function() {
      this.$root.classList.add("hidden");
    },
    scrollEnd: function() {
      this.$root.classList.remove("hidden");
    }
    // You can define any other Alpine.js functions here.
  };
}
export {
  tutorialComponent as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vY29tcG9uZW50cy90dXRvcmlhbC5qcyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLy8gSW1wb3J0IGFueSBleHRlcm5hbCBKYXZhU2NyaXB0IGxpYnJhcmllcyBmcm9tIE5QTSBoZXJlLlxuLy8gaW1wb3J0IE1vdXNldHJhcCBmcm9tICdtb3VzZXRyYXAnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0dXRvcmlhbENvbXBvbmVudCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5kZXg6IGluZGV4LFxuICAgICAgICBzY3JvbGxUaW1lb3V0OiBudWxsLFxuICAgICAgICBkb2N1bWVudEhlaWdodDogMCxcblxuICAgICAgICBpbml0aWFsaXplOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndHV0b3JpYWw6OnJlbmRlcicsICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmRvY3VtZW50SGVpZ2h0ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodDtcbiAgICAgICAgICAgICAgICB0aGlzLiRyb290LnN0eWxlLmhlaWdodCA9IHRoaXMuZG9jdW1lbnRIZWlnaHQgKyAncHgnO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLnR1dG9yaWFsID0gdGhpcztcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdJbml0IHR1dG9yaWFsJyk7XG4gICAgICAgICAgICAvLyBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG5cbiAgICAgICAgICAgIC8vIFRPRE86XG4gICAgICAgICAgICB0aGlzLmRvY3VtZW50SGVpZ2h0ID0gTWF0aC5tYXgoZG9jdW1lbnQuYm9keS5zY3JvbGxIZWlnaHQsIGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0LFxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQsIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQsIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5vZmZzZXRIZWlnaHQpO1xuXG4gICAgICAgICAgICAvLyBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLiRkaXNwYXRjaCgndHV0b3JpYWw6OnJlbmRlcicpO1xuICAgICAgICAgICAgICAgIC8vIHRoaXMuZG9jdW1lbnRIZWlnaHQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0O1xuICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ2RlbGF5IGhlaWdodCcsIHRoaXMuZG9jdW1lbnRIZWlnaHQpO1xuICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgLy8gdGhpcy4kcm9vdC5zdHlsZS5oZWlnaHQgPSB0aGlzLmRvY3VtZW50SGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnaGVpZ2h0JywgdGhpcy5kb2N1bWVudEhlaWdodCk7XG4gICAgICAgICAgICAvLyB0aGlzLiRyb290LnN0eWxlLmhlaWdodCA9IHRoaXMuZG9jdW1lbnRIZWlnaHQgKyAncHgnO1xuXG4gICAgICAgICAgICAvLyBUT0RPOiBjYWxsIG9ubHkgaGVpZ2h0IG1vZGlmZWlyXG4gICAgICAgICAgICAvLyB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgKCkgPT4ge1xuICAgICAgICAgICAgLy8gICAgIGlmICh0aGlzLnNjcm9sbFRpbWVvdXQpIHtcbiAgICAgICAgICAgIC8vICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuc2Nyb2xsVGltZW91dCk7XG4gICAgICAgICAgICAvLyAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vICAgICAgICAgdGhpcy5zY3JvbGxTdGFydCgpO1xuICAgICAgICAgICAgLy8gICAgIH1cbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyAgICAgdGhpcy5zY3JvbGxUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAvLyAgICAgICAgIHRoaXMuc2Nyb2xsRW5kKCk7XG4gICAgICAgICAgICAvLyAgICAgICAgIHRoaXMuc2Nyb2xsVGltZW91dCA9IG51bGw7XG4gICAgICAgICAgICAvLyAgICAgfSwgMTAwKTtcbiAgICAgICAgICAgIC8vIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIHNjcm9sbFN0YXJ0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLiRyb290LmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHNjcm9sbEVuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy4kcm9vdC5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBZb3UgY2FuIGRlZmluZSBhbnkgb3RoZXIgQWxwaW5lLmpzIGZ1bmN0aW9ucyBoZXJlLlxuICAgIH1cbn0iXSwKICAibWFwcGluZ3MiOiAiO0FBR2UsU0FBUixrQkFBbUM7QUFBQSxFQUNJO0FBQ0osR0FBRztBQUN6QyxTQUFPO0FBQUEsSUFDSDtBQUFBLElBQ0EsZUFBZTtBQUFBLElBQ2YsZ0JBQWdCO0FBQUEsSUFFaEIsWUFBWSxXQUFZO0FBQ3BCLGFBQU8saUJBQWlCLG9CQUFvQixNQUFNO0FBQzlDLGFBQUssaUJBQWlCLFNBQVMsZ0JBQWdCLHNCQUFzQixFQUFFO0FBQ3ZFLGFBQUssTUFBTSxNQUFNLFNBQVMsS0FBSyxpQkFBaUI7QUFBQSxNQUNwRCxDQUFDO0FBQ0QsV0FBSyxXQUFXO0FBQ2hCLGNBQVEsSUFBSSxlQUFlO0FBSTNCLFdBQUssaUJBQWlCLEtBQUs7QUFBQSxRQUFJLFNBQVMsS0FBSztBQUFBLFFBQWMsU0FBUyxLQUFLO0FBQUEsUUFDckUsU0FBUyxnQkFBZ0I7QUFBQSxRQUFjLFNBQVMsZ0JBQWdCO0FBQUEsUUFBYyxTQUFTLGdCQUFnQjtBQUFBLE1BQVk7QUFHdkgsV0FBSyxVQUFVLE1BQU07QUFDakIsYUFBSyxVQUFVLGtCQUFrQjtBQUFBLE1BTXJDLENBQUM7QUFFRCxjQUFRLElBQUksVUFBVSxLQUFLLGNBQWM7QUFBQSxJQWdCN0M7QUFBQSxJQUVBLGFBQWEsV0FBWTtBQUNyQixXQUFLLE1BQU0sVUFBVSxJQUFJLFFBQVE7QUFBQSxJQUNyQztBQUFBLElBRUEsV0FBVyxXQUFZO0FBQ25CLFdBQUssTUFBTSxVQUFVLE9BQU8sUUFBUTtBQUFBLElBQ3hDO0FBQUE7QUFBQSxFQUVKO0FBQ0o7IiwKICAibmFtZXMiOiBbXQp9Cg==
